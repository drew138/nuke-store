name: deploy laravel

on:
  push:
    branches: [andres/deploy]

jobs:
  deploy:
    runs-on: ubuntu-20.04
    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}${{ github.sha }}

      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_SOCKET: "cloudsql"
      APP_NAME: "NukeStore"
      APP_ENV: "local"
      APP_KEY: ${{ secrets.APP_KEY }}
      APP_DEBUG: true
      DB_CONNECTION: "mysql"

    steps:
      - uses: actions/checkout@v2

      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: "set up google cloud sdk"
        uses: "google-github-actions/setup-gcloud@v0"

      # - name: "install google cloud sql auth proxy"
      #   run: |
      #     wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy &&
      #     chmod +x cloud_sql_proxy

      - name: "grant permissions to docker"
        run: gcloud auth configure-docker

      # - name: "install dependencies"
      #   uses: php-actions/composer@v6
      #   with:
      #     php_version: "8.1"
      #     version: 2.x
      #     working_dir: ./src

      - name: Build Docker image
        run: docker build . -t $IMAGE_NAME

      # - name: Test Docker image
      #   run: docker run $IMAGE_NAME sh -c "go test -v"

      - name: Push Docker image
        run: docker push $IMAGE_NAME

      # - name: "run migrations"
      #   env:
      #     DB_HOST: "127.0.0.1"
      #   run: ./cloud_sql_proxy -instances=${{ secrets.GCP_PROJECT_ID }}:${{ secrets.GCP_REGION }}:${{ secrets.GCP_DB_INSTANCE }}=tcp:${{ secrets.DB_PORT }} & php ./src/artisan migrate

      - name: Deploy Docker image
        # gcloud run deploy nuke-store --project nuke-store-381301 --image gcr.io/nuke-store-381301/nuke-store --platform managed --region us-east1
        run: |-
          gcloud run deploy ${{ secrets.GOOGLE_CLOUD_RUN_SERVICE }} 
          --project ${{ secrets.GCP_PROJECT_ID }} 
          --image $IMAGE_NAME
          --region ${{ secrets.GCP_REGION }} --platform managed
